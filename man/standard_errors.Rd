% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostics.R
\name{standard_errors}
\alias{standard_errors}
\title{Emulator Standardised Errors}
\usage{
standard_errors(emulator, targets = NULL, validation = NULL, plt = TRUE, ...)
}
\arguments{
\item{emulator}{An \code{\link{Emulator}} object.}

\item{targets}{The output targets (to check the relevance of failed points).}

\item{validation}{The validation data.frame, with all inputs and outputs.}

\item{plt}{Should the histogram be produced?}

\item{...}{Dummy parameters for compatibility with the diagnostic wrapper}
}
\value{
A data.frame of points that fail the diagnostic.
}
\description{
Finds and plots emulator standardised errors.
}
\details{
For an emulator of a simulator function \code{f(x)} and a validation set \code{X}, this
finds the standardised errors in the form \code{(f(x)-E[f(x)])/sqrt(Var[f(x)])}, where
\code{E[f(x)]} is the emulator expectation, and \code{Var[f(x)]} the emulator uncertainty,
at each point \code{x} in \code{X}.

If \code{plt = TRUE}, then the histogram of standardised errors is provided. Regardless,
the set of points that fail this diagnostic are returned as a data.frame. If the output
target is provided as a (val, sigma) pair, then the 'failing' points are checked for
relevance: if they are a long way from the target region, then they are discounted.

If a validation dataset is not provided, then cross-validation is performed using the
training set. By default, leave-one-out cross-validation is used; the parameter \code{k}
can be provided as an optional argument to this function to perform k-fold cross validation
(where k must be a multiple of the dataset size).
}
\examples{
standard_errors(sample_emulators$ems$nS, sample_emulators$targets, GillespieValidation)
## An empty data.frame.
standard_errors(sample_emulators$ems$nS, sample_emulators$targets)
# leave-one-out cross-validation

}
